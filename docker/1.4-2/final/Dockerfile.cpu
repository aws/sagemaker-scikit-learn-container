FROM sklearn-base:1.4-2
ENV SAGEMAKER_SKLEARN_VERSION 1.4-2
ENV PIP_ROOT_USER_ACTION=ignore

LABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true

# Install scientific packages via conda to avoid binary incompatibility
RUN conda install -y numpy==2.1.0 scipy>=1.9.0 pandas>=1.5.0 scikit-learn==1.4.2 pyarrow==17.0.0

# Install remaining packages via pip
COPY requirements.txt /requirements.txt
RUN python -m pip install -r /requirements.txt && \
    rm /requirements.txt
    
# Fix Python 3.10 compatibility for sagemaker-containers
RUN python3 -c "import sys; sys.path.insert(0, '/miniconda3/lib/python3.10/site-packages'); \
    import sagemaker_containers._mapping as m; \
    import collections.abc; \
    setattr(collections, 'Mapping', collections.abc.Mapping); \
    exec(open('/miniconda3/lib/python3.10/site-packages/sagemaker_containers/_mapping.py').read().replace('collections.Mapping', 'collections.abc.Mapping'))" || \
    sed -i 's/collections\.Mapping/collections.abc.Mapping/g' /miniconda3/lib/python3.10/site-packages/sagemaker_containers/_mapping.py

# Copy fixed conftest.py to avoid pandas binary incompatibility
COPY test/conftest.py /code/test/conftest.py


COPY dist/sagemaker_sklearn_container-2.0-py3-none-any.whl /sagemaker_sklearn_container-2.0-py3-none-any.whl
RUN rm /miniconda3/lib/python3.10/site-packages/**/REQUESTED && \
    rm /miniconda3/lib/python3.10/site-packages/**/direct_url.json
RUN pip install --no-cache /sagemaker_sklearn_container-2.0-py3-none-any.whl && \
    rm /sagemaker_sklearn_container-2.0-py3-none-any.whl

ENV SAGEMAKER_TRAINING_MODULE sagemaker_sklearn_container.training:main
ENV SAGEMAKER_SERVING_MODULE sagemaker_sklearn_container.serving:main

#######
# MMS #
#######
# Create MMS user directory
RUN useradd -m model-server
RUN mkdir -p /home/model-server/tmp
RUN chown -R model-server /home/model-server

# Copy MMS configs
COPY docker/$SAGEMAKER_SKLEARN_VERSION/resources/mms/config.properties.tmp /home/model-server
ENV SKLEARN_MMS_CONFIG=/home/model-server/config.properties

# Copy execution parameters endpoint plugin for MMS
RUN mkdir -p /tmp/plugins
COPY docker/$SAGEMAKER_SKLEARN_VERSION/resources/mms/endpoints-1.0.jar /tmp/plugins
RUN chmod +x /tmp/plugins/endpoints-1.0.jar

# Create directory for models
RUN mkdir -p /opt/ml/models
RUN chmod +rwx /opt/ml/models

#####################
# Required ENV vars #
#####################
# Set SageMaker training environment variables
ENV SM_INPUT /opt/ml/input
ENV SM_INPUT_TRAINING_CONFIG_FILE $SM_INPUT/config/hyperparameters.json
ENV SM_INPUT_DATA_CONFIG_FILE $SM_INPUT/config/inputdataconfig.json
ENV SM_CHECKPOINT_CONFIG_FILE $SM_INPUT/config/checkpointconfig.json

# Set SageMaker serving environment variables
ENV SM_MODEL_DIR /opt/ml/model

EXPOSE 8080
ENV TEMP=/home/model-server/tmp

# Required label for multi-model loading
LABEL com.amazonaws.sagemaker.capabilities.multi-models=true

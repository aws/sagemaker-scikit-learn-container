ARG UBUNTU_VERSION=16.04

FROM ubuntu:${UBUNTU_VERSION}

ARG CONDA_VERSION=4.8.3
ARG CONDA_PY_VERSION=37
ARG PYTHON_VERSION=3.7
ARG PYARROW_VERSION=0.16.0
ARG MLIO_VERSION=0.5.1

# Install python and other scikit-learn runtime dependencies
# Dependency list from http://scikit-learn.org/stable/developers/advanced_installation.html#installing-build-dependencies
RUN apt-get update && \
    apt-get -y install \
        build-essential \
        libatlas-dev \
        git \
        wget \
        curl \
        nginx \
        jq \
        libatlas3-base \
        openjdk-8-jdk-headless

RUN cd /tmp && \
    curl -L --output /tmp/Miniconda3.sh https://repo.anaconda.com/miniconda/Miniconda3-py${CONDA_PY_VERSION}_${CONDA_VERSION}-Linux-x86_64.sh && \
    bash /tmp/Miniconda3.sh -bfp /miniconda3 && \
    rm /tmp/Miniconda3.sh

ENV PATH=/miniconda3/bin:${PATH}

RUN conda install python=${PYTHON_VERSION} && \
    conda update -y conda && \
    conda install -c conda-forge pyarrow=${PYARROW_VERSION} && \
    conda install -c mlio -c conda-forge mlio-py=${MLIO_VERSION} && \
    conda install -c anaconda scipy

# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules
# Force stdin, stdout and stderr to be totally unbuffered. Good for logging
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1 PYTHONIOENCODING=UTF-8 LANG=C.UTF-8 LC_ALL=C.UTF-8

# Install Scikit-Learn
# Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.
# Scikit-learn now requires Python 3.6 or newer.
RUN python -m pip install --no-cache -I scikit-learn==0.23.2

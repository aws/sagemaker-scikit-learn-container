version: 0.2
phases:
  install:
    runtime-versions:
      docker: 18
      python: 3.7
  pre_build:
    commands:
    - echo Logging in to Amazon ECR...
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - echo Installing dependencies...
    - curl -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    - bash Miniconda3-latest-Linux-x86_64.sh -bfp /miniconda3
    - export PATH=/miniconda3/bin:${PATH}
    - conda install python=3.7
    - conda update -y conda
    - python3 -m pip install pip==20.1  # Pip dependency resolver in 20.2+ can't resolve some dependencies
    - python3 -m pip install .[test]
  build:
    commands:
    - echo Build started on `date`
    - echo Building base container...
    - docker login -u $dockerhub_username -p $dockerhub_password
    - docker build -t sklearn-base:$FRAMEWORK_VERSION-cpu-py3  -f docker/$FRAMEWORK_VERSION/base/Dockerfile.cpu .
    - pip install wheel setuptools
    - python setup.py bdist_wheel
    - echo Building final container...
    - docker build -t preprod-sklearn:$FRAMEWORK_VERSION-cpu-py3 -f docker/$FRAMEWORK_VERSION/final/Dockerfile.cpu .
    - echo Building test container...
    - printf "FROM preprod-sklearn:$FRAMEWORK_VERSION-cpu-py3\nADD . /app\nWORKDIR /app\nRUN python3 -m pip install .[test]" > Dockerfile.test
    - docker build -t test-sklearn -f Dockerfile.test .
    - echo Running tox...
    - docker run --rm --entrypoint /bin/bash test-sklearn -c "tox -e ALL"
    - echo Running container tests...
    - pytest test/integration --docker-base-name preprod-sklearn --tag $FRAMEWORK_VERSION-cpu-py3 --py-version 3 --framework-version $FRAMEWORK_VERSION
  post_build:
    commands:
    - echo Build completed on `date`
    - |
      case $CODEBUILD_WEBHOOK_EVENT in
        PULL_REQUEST_MERGED)
          echo Logging in to Amazon ECR...
          $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
          echo Pushing the Docker image...
          docker push $SM_ALPHA.dkr.ecr.us-west-2.amazonaws.com/sagemaker-scikit-learn:$FRAMEWORK_VERSION-cpu-py3 | grep -v -E "[0-9]{12}.dkr.ecr.\S+.amazonaws.com"
          docker push $SM_ALPHA.dkr.ecr.us-west-2.amazonaws.com/sagemaker-scikit-learn:$FRAMEWORK_VERSION | grep -v -E "[0-9]{12}.dkr.ecr.\S+.amazonaws.com"
          ;;
        PULL_REQUEST_CREATED | PULL_REQUEST_UPDATED | PULL_REQUEST_REOPENED)
          echo Logging in to Amazon ECR...
          $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
          echo Pushing the Docker image...
          # pushes test tag for manual verification, requires cleanup in ECR every once in a while though
          TEST_TAG=$SM_ALPHA.dkr.ecr.us-west-2.amazonaws.com/sagemaker-scikit-learn:${FRAMEWORK_VERSION}-cpu-py3-test
          docker tag preprod-sklearn:$FRAMEWORK_VERSION-cpu-py3 ${TEST_TAG}
          docker push ${TEST_TAG} | grep -v -E "[0-9]{12}.dkr.ecr.\S+.amazonaws.com"
          ;;
        *)
          echo Undefined behavior for webhook event type $CODEBUILD_WEBHOOK_EVENT
          ;;
      esac
